#!/usr/bin/env php
<?php

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\Input\InputArgument;
use Setono\CronBuilder\CronBuilder;

set_time_limit(0);

if (is_file($autoload = __DIR__ . '/../vendor/autoload.php')) {
    require($autoload);
} elseif (is_file($autoload = __DIR__ . '/../../../autoload.php')) {
    require($autoload);
} else {
    fwrite(STDERR,
        'You must set up the project dependencies, run the following commands:'.PHP_EOL.
        'curl -s http://getcomposer.org/installer | php'.PHP_EOL.
        'php composer.phar install'.PHP_EOL
    );
    exit(1);
}

(new Application('cron-builder'))
    ->register('validate')
    ->addArgument('source-dir', InputArgument::OPTIONAL, 'The directory where your cronjob config files are located')
    ->addOption('delimiter', null, InputOption::VALUE_REQUIRED, 'The marker that divides sections in your crontab')
    ->setCode(function(InputInterface $input, OutputInterface $output) {
        $options = [];

        if($input->getArgument('source-dir') !== null) {
            $options['source'] = $input->getArgument('source-dir');
        }
        if($input->getOption('delimiter') !== null) {
            $options['delimiter'] = $input->getOption('delimiter');
        }

        $cronBuilder = new CronBuilder($options);
        $cronBuilder->validate();
    })
    ->getApplication()
    ->setDefaultCommand('validate', true)
    ->run()
;
