name: build

on:
    push: ~
    pull_request: ~
    schedule:
        -   cron: 5 8 * * 2

env:
    PHP_EXTENSIONS: "mbstring"

jobs:
    coding-standards:
        name: "Coding Standards"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - "7.4"

                dependencies:
                    - "highest"

        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v2.3.2"

            -   name: "Install PHP with extensions"
                uses: "shivammathur/setup-php@2.4.3"
                with:
                    coverage: "none"
                    extensions: "${{ env.PHP_EXTENSIONS }}"
                    php-version: "${{ matrix.php-version }}"

            -   name: "Validate composer.json and composer.lock"
                run: "composer validate --strict"

            -   name: "Determine composer cache directory"
                uses: "./.github/actions/composer/composer/determine-cache-directory"

            -   name: "Cache dependencies installed with composer"
                uses: "actions/cache@v2.1.1"
                with:
                    path: "${{ env.COMPOSER_CACHE_DIR }}"
                    key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
                    restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

            -   name: "Install ${{ matrix.dependencies }} dependencies with composer"
                uses: "./.github/actions/composer/composer/install"
                with:
                    dependencies: "${{ matrix.dependencies }}"

            -   name: "Run ergebnis/composer-normalize"
                run: "composer normalize --dry-run"

            -   name: "Run symplify/easy-coding-standard"
                run: "composer check-style"

    dependency-analysis:
        name: "Dependency Analysis"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - "7.4"

                dependencies:
                    - "highest"

        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v2.3.2"

            -   name: "Install PHP with extensions"
                uses: "shivammathur/setup-php@2.4.3"
                with:
                    coverage: "none"
                    extensions: "${{ env.PHP_EXTENSIONS }}"
                    php-version: "${{ matrix.php-version }}"
                    tools: "composer-require-checker, composer-unused"

            -   name: "Determine composer cache directory"
                uses: "./.github/actions/composer/composer/determine-cache-directory"

            -   name: "Cache dependencies installed with composer"
                uses: "actions/cache@v2.1.1"
                with:
                    path: "${{ env.COMPOSER_CACHE_DIR }}"
                    key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
                    restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

            -   name: "Install ${{ matrix.dependencies }} dependencies with composer"
                uses: "./.github/actions/composer/composer/install"
                with:
                    dependencies: "${{ matrix.dependencies }}"

            -   name: "Run maglnet/composer-require-checker"
                run: "composer-require-checker check"

            -   name: "Run icanhazstring/composer-unused"
                run: "composer-unused"

    tests:
        name: "Tests"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - "7.4"
                    - "8.0"

                dependencies:
                    - "lowest"
                    - "locked"
                    - "highest"

        steps:
            -   name: "Checkout"
                uses: "actions/checkout@v2.3.2"

            -   name: "Install PHP with extensions"
                uses: "shivammathur/setup-php@2.4.3"
                with:
                    coverage: "none"
                    extensions: "${{ env.PHP_EXTENSIONS }}"
                    php-version: "${{ matrix.php-version }}"

            -   name: "Set up problem matchers for phpunit/phpunit"
                run: "echo \"::add-matcher::${{ runner.tool_cache }}/phpunit.json\""

            -   name: "Determine composer cache directory"
                uses: "./.github/actions/composer/composer/determine-cache-directory"

            -   name: "Cache dependencies installed with composer"
                uses: "actions/cache@v2.1.1"
                with:
                    path: "${{ env.COMPOSER_CACHE_DIR }}"
                    key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
                    restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"

            -   name: "Install ${{ matrix.dependencies }} dependencies with composer"
                uses: "./.github/actions/composer/composer/install"
                with:
                    dependencies: "${{ matrix.dependencies }}"

            -   name: "Run unit tests with phpunit/phpunit"
                run: "composer phpunit"

    checks:
        steps:
            -   name: Checkout
                uses: actions/checkout@v1
            -   name: Setup PHP, with composer and extensions
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                    extensions: "${{ env.PHP_EXTENSIONS }}"
                    tools: composer-require-checker, composer-unused
                    coverage: none
            -   name: Install Composer dependencies
                run: composer update --no-progress --no-suggest --prefer-dist --no-interaction
            -   name: Static analysis
                run: composer analyse
            -   name: Run phpunit
                run: composer phpunit
            -   name: Upload coverage
                run: |
                    wget https://scrutinizer-ci.com/ocular.phar
                    php ocular.phar code-coverage:upload --format=php-clover build/coverage.xml
